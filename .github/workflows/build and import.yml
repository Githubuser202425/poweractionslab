name: release-solution-to-prod

# Reusable workflow

# upload the solution to the GitHub artifacts and deploy to the PROD environment

on:

  workflow_dispatch:

    inputs:

      #Do Not change these values

      #Values are set by the caller

      #caller sample: release-action-call.ymnl

      solution_name:

        description: 'The solution name.'

        type: string

        default: 'TestSolution '  

      solution_shipping_folder:

        description: 'folder name for staging the exported solution *do not change*'       

        type: string

        default: out/ship/

      solution_outbound_folder:

        description: 'staging the unpacked solution folder before check-in *do not change*'

        type: string

        default: out/solutions/

      solution_source_folder:

       description: 'folder name to be created and checked in *do not change*'

       type: string

       default: solutions/

      solution_release_folder:

       description: 'folder where the released binaries are going to be hosted *do not change*'

       type: string

       default: out/release

         

      PRODUCTION_ENVIRONMENT_URL:

        description: 'Production environment url.'

        type: string

        required: true

        default: https://org48e2f095.crm.dynamics.com/

       

      CLIENT_ID:

        description: 'The client id'

        type: string

        required: true

        default: e1a8c3a3-24da-4d74-9e94-792f500c537c

      TENANT_ID:

        description: 'The tenant id'

        type: string

        required: true

        default: 37266589-afea-4673-9c44-f4cc3eff6a70 

 

jobs:

  convert-to-managed:

    runs-on: windows-latest

    # or you can say runs-on: ubuntu-latest

    env:

      RUNNER_DEBUG: 1

 

    steps:

    - uses: actions/checkout@v2

      with:

        lfs: true

    - name: Install Power Platform Tools
        
      uses: microsoft/powerplatform-actions/actions-install@latest
      

    - name: Pack solution

      uses: microsoft/powerplatform-actions/pack-solution@latest

      with:

        solution-folder: ${{inputs.solution_source_folder}}/${{inputs.solution_name}}

        solution-file: ${{inputs.solution_outbound_folder}}/${{inputs.solution_name}}_unmanaged.zip

        solution-type: Unmanaged

    
          

 

    - name: Upload the ready to ship solution to GH artifact store

      uses: actions/upload-artifact@v2

      with:

        name: managedSolutions

        path: ${{inputs.solution_outbound_folder}}

 

  release-to-staging:

    needs: [ convert-to-managed ]

    runs-on: windows-latest

    env:

      RUNNER_DEBUG: 1

 

    steps:

    - uses: actions/checkout@v2

      with:

        lfs: true

 

    - name: Fetch the ready to ship solution from GH artifact store

      uses: actions/download-artifact@v2

      with:

        name: managedSolutions

        path: ${{inputs.solution_release_folder}}

    - name: Import solution to prod env

      uses: microsoft/powerplatform-actions/import-solution@v1

      with:

        environment-url: ${{inputs.PRODUCTION_ENVIRONMENT_URL}}

        app-id: ${{inputs.CLIENT_ID}}

        client-secret: ${{ secrets.PowerPlatformSPN }}

        tenant-id: ${{inputs.TENANT_ID}}

        solution-file: ${{ inputs.solution_release_folder}}/${{inputs.solution_name}}_unmanaged.zip

        force-overwrite: true

        publish-changes: true
